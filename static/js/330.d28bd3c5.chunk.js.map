{"version":3,"file":"static/js/330.d28bd3c5.chunk.js","mappings":"8OAEaA,EAAQC,EAAAA,EAAAA,GAAH,gFAMLC,EAAOD,EAAAA,EAAAA,GAAH,oKASJE,EAAQF,EAAAA,EAAAA,IAAH,iGAOLG,EAAOH,EAAAA,EAAAA,EAAH,iEAKJI,EAAOJ,EAAAA,EAAAA,KAAH,gS,SCxBF,SAASK,EAAT,GAA4B,IAAD,EAAXC,EAAW,EAAXA,QAC7B,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASE,OAPFC,EAAAA,EAAAA,YAAU,WAER,OADAC,EAAAA,EAAmBL,GAASM,KAAKH,GAC1B,WACLA,EAAQ,KACT,CACF,GAAE,CAACH,KAGA,8BACO,OAAJE,QAAI,IAAJA,GAAA,UAAAA,EAAMK,YAAN,SAAYC,QACX,SAACf,EAAD,UACGS,GACCA,EAAKK,KAAKE,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GACvD,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IAAG,yCAAoCF,GACvCG,IAAKL,KAEP,UAACb,EAAD,oBAAaa,MACb,UAACb,EAAD,yBAAkBc,OANTE,EASd,OAEL,SAACG,EAAD,MAIN,SAASA,IACT,OAAO,iCACL,SAAClB,EAAD,sDADK,iBAGR,CACA,C","sources":["components/app-pages/Cast/Cast.styled.jsx","components/app-pages/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Board = styled.ul`\n  margin: -10px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Card = styled.li`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-basis: calc(100% / 5 - 20px);\n  margin: 10px;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: 180px;\n  height: auto;\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const Span = styled.span`\nfont-family: Roboto, Arial, sans-serif;\nfont-size: 30px;\nfont-weight: 700;\ncolor: #020024;\nbackground: radial-gradient( #020024 1px, transparent 1.5px);\n  background-size: 3px 3px;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  `\n","import { useState, useEffect } from \"react\";\nimport * as movieAPI from '../../../services/movie-api';\nimport { Board, Card, Image, Text, Span } from './Cast.styled';\n\n\nexport default function Cast({ movieId }) {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    movieAPI.fetchCast(movieId).then(setData);\n    return () => {\n      setData(null);\n    };\n  }, [movieId]);\n\n    return (\n      <>\n        {data?.cast?.length ?\n          <Board>\n            {data &&\n              data.cast.map(({ original_name, character, profile_path, id }) => {\n                return (\n                  <Card key={id}>\n                    <Image\n                      src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                      alt={original_name}\n                    />\n                    <Text>Name: {original_name}</Text>\n                    <Text>Character: {character}</Text>\n                  </Card>\n                );\n              })}\n          </Board>:\n          <NoData />}\n      </>\n    );\n\n    function NoData() {\n    return <>\n      <Span>Sorry, there is nothing for review ... </Span>ðŸ‘€\n    </>\n  };\n  }\n"],"names":["Board","styled","Card","Image","Text","Span","Cast","movieId","useState","data","setData","useEffect","movieAPI","then","cast","length","map","original_name","character","profile_path","id","src","alt","NoData"],"sourceRoot":""}